//=============================================================================
// ■ FM::Test
//-----------------------------------------------------------------------------
//   执行单元测试的简陋框架。关于FMLib的测试用例程序，请参考fmlib_test.cpp。
//=============================================================================

namespace Test {
	//-------------------------------------------------------------------------
	// ● 定义
	//-------------------------------------------------------------------------
	int section_pass, section_count;
	int pass, count;
	//-------------------------------------------------------------------------
	// ● 打印分数
	//-------------------------------------------------------------------------
	void print_score(int pass, int count) {
		printf("\n");
		if (count) {
			if (pass == count) {
				printf("100%\n");
			} else {
				printf("\n%d/%d ~ %.1f%%\n", pass, count, (float) pass / count * 100);
			}
		} else {
			printf("0/0\n");
		}
	}
	//-------------------------------------------------------------------------
	// ● 结束
	//-------------------------------------------------------------------------
	void terminate() {
		print_score(section_pass, section_count);
		print_score(pass, count);
	}
	//-------------------------------------------------------------------------
	// ● 初始化
	//-------------------------------------------------------------------------
	void initialize() {
		section_pass = section_count = 0;
		pass = count = 0;
		// 不喜欢回收废品？没问题，我来帮你……
		if (atexit(terminate)) {
			fprintf(stderr, "atexit() != 0\n");
			exit(1);
		}
	}
	//-------------------------------------------------------------------------
	// ● 开始新的篇章
	//-------------------------------------------------------------------------
	void section(const char* description) {
		if (section_count) {
			print_score(section_pass, section_count);
		}
		section_pass = section_count = 0;
		printf("[%s]\n", description);
	}
	//-------------------------------------------------------------------------
	// ● 测试
	//-------------------------------------------------------------------------
	void test(bool ok) {
		if (ok) {
			section_pass++;
			pass++;
		}
		section_count++;
		count++;
		printf("%c", ok ? '.' : 'F');
	}
	//-------------------------------------------------------------------------
	// ● 更多测试种类
	//-------------------------------------------------------------------------
	template <class T> void test(T x, T y) {
		test(x == y);
	}
	template <> void test(const char* x, const char* y) {
		test(strcmp(x, y) == 0);
	}
}
