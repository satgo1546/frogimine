//=============================================================================
// ■ fmstring.cpp
//-----------------------------------------------------------------------------
//   为了偷懒而制作的处理字符串及其相关操作的函数库。
//=============================================================================

namespace FMString {
	//-------------------------------------------------------------------------
	// ● WTF
	//-------------------------------------------------------------------------
	const char* wtf() {
		char b[3] = {'A', '1', 0};
		return b;
	}

	//-------------------------------------------------------------------------
	// ● 把数字转换成字符串
	//   希望能够运行，然而不能。显然有对指针的理解问题。
	//-------------------------------------------------------------------------
	const char* from_long(long a) {
		// r中存放返回值
		char b;
		char* r = &b;
		// 处理a为零的简单情况
		if (a == 0) return "0";
		// 确定符号位
		r[0] = (a > 0 ? '+' : '-');
		if (a < 0) a = -a;
		// 确定结果的长度
		// long类型可以达到10位十进制数值
		char len = 1;
		if (a >= 10) len = 2;
		if (a >= 100) len = 3;
		if (a >= 1000) len = 4;
		if (a >= 10000) len = 5;
		if (a >= 100000) len = 6;
		if (a >= 1000000) len = 7;
		if (a >= 10000000) len = 8;
		if (a >= 100000000) len = 9;
		if (a >= 1000000000) len = 10;
		// 执行转换
		int i = len;
		r[len + 1] = '\0';
		do {
			r[i] = '0' + a % 10;
			a /= 10;
			i--;
		} while (i >= 1);
		return r;
	}
}
